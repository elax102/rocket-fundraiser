{
  "_args": [
    [
      {
        "raw": "@pingy/instant@^3.0.0",
        "scope": "@pingy",
        "escapedName": "@pingy%2finstant",
        "name": "@pingy/instant",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "/home/alex/Documents/Learning/rocket/node_modules/@pingy/cli"
    ]
  ],
  "_from": "@pingy/instant@>=3.0.0 <4.0.0",
  "_id": "@pingy/instant@3.0.0",
  "_inCache": true,
  "_location": "/@pingy/instant",
  "_nodeVersion": "7.5.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/instant-3.0.0.tgz_1491563495033_0.26486042398028076"
  },
  "_npmUser": {
    "name": "davej",
    "email": "dave@davejeffery.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@pingy/instant@^3.0.0",
    "scope": "@pingy",
    "escapedName": "@pingy%2finstant",
    "name": "@pingy/instant",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@pingy/cli"
  ],
  "_resolved": "https://registry.npmjs.org/@pingy/instant/-/instant-3.0.0.tgz",
  "_shasum": "bca684ddd0b2a3dcb8a8a251f72d914e343b07b9",
  "_shrinkwrap": null,
  "_spec": "@pingy/instant@^3.0.0",
  "_where": "/home/alex/Documents/Learning/rocket/node_modules/@pingy/cli",
  "author": {
    "name": "Felix Gnass",
    "email": "fgnass@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/davej/instant/issues"
  },
  "dependencies": {
    "filewatcher": "^2.2.0",
    "send": "^0.12.1",
    "sendevent": "^1.0.4",
    "stacked": "^1.1.1",
    "tamper": "^0.1.0"
  },
  "description": "drop-in replacement for connect.static with live-reload support",
  "devDependencies": {
    "browserify": "^9.0.3",
    "mocha": "^2.2.1",
    "should": "^5.2.0",
    "supertest": "^0.15.0"
  },
  "directories": {},
  "dist": {
    "shasum": "bca684ddd0b2a3dcb8a8a251f72d914e343b07b9",
    "tarball": "https://registry.npmjs.org/@pingy/instant/-/instant-3.0.0.tgz"
  },
  "homepage": "https://github.com/davej/instant",
  "keywords": [
    "live",
    "reload",
    "livereload",
    "css"
  ],
  "license": "MIT",
  "main": "lib",
  "maintainers": [
    {
      "name": "davej",
      "email": "dave@davejeffery.com"
    }
  ],
  "name": "@pingy/instant",
  "optionalDependencies": {},
  "private": false,
  "readme": "# instant â€“ transparent live-reloading\n\n[![Build Status](https://travis-ci.org/fgnass/instant.png)](https://travis-ci.org/fgnass/instant)\n\nInstant is ultra lightweight live-reload implementation with a unique feature set:\n\n\n* Works in all browsers including mobile devices and IE6\n* No browser plugin required\n* Can be used as drop-in replacement for the express.static() middleware\n* Production mode with zero overhead\n* Automatic client code injection\n\n## How it works\n\nAll static files that are served by the middleware are added to a watch list. Whenever one of these files is modified the client gets notified an reloads the resource. CSS files are updated without reloading the whole page.\n\nInstant automatically injects a script-tag right before the closing `body` tag\nof any HTML page (including dynamic ones) in order to load the client code.\n\nThe client uses\n[server-sent events](http://en.wikipedia.org/wiki/Server-sent_events) to\nlisten for updates. Browsers that don't support EventSource will fall back to a\n[hidden iframe](http://en.wikipedia.org/wiki/Comet_%28programming%29#Hidden_iframe).\n\n\n## Usage\n\n```js\nvar express = require('express');\nvar instant = require('instant');\n\nvar app = express();\napp.use(instant(__dirname + '/static'));\n```\n\nIf `$NODE_ENV` is set to `production` or `{ bypass: true }` is passed as option, instant will behave just like `express.static()` with no additional overhead.\n\n### Reloading dynamic files\n\nThe instant middlware also exposes a `.reload()` function that can be called to\nreload arbitrary URLs. This can be useful if you want to reload scripts or\nstylesheets that have been processed/compiled on the fly.\n\nNote: If you don't want to server any static files at all you can safely omit\nthe  `root` argument.\n\n```js\nvar express = require('express');\nvar instant = require('instant');\n\nvar app = express();\nvar ins = instant();\n\napp.use(ins);\n\napp.get('/tick', function(req, res) {\n  res.send('Current date: ' + new Date());\n});\n\n// Trigger a reload of the page every 10 seconds:\nsetInterval(function() {\n  ins.reload('/tick');\n}, 10000);\n```\n\n### Options\n\nThe following options are supported:\n\n* __bypass__ If set to `true` instant will behave just like express.static(). Defaults to `process.env.NODE_ENV == 'production'`\n* __watch__ List of file extensions to watch. Defaults to `['html', 'js', 'css']`\n* __prefix__ A prefix to add to the URLs under which the client script and the EventSource are exposed. Defaults to `'/instant'`\n* __delay__ Amount of time in milliseconds to wait before triggering a reload. Defaults to `10`\n\nAll other options like `etag`, `dotfiles`, `index`, etc. are passed on to [send](https://www.npmjs.com/package/send).\n\n## instant(1)\n\nThere is also an `instant` binary that can be used to spawn a development\nserver in the current directory.\nThe [instant-server](https://github.com/fgnass/instant-server) is packaged as\nspeparate module and can be installed via npm:\n\n```\nnpm install -g instant-server\n```\n\n![screenshot](http://fgnass.github.io/images/instant.gif)\n\n### The MIT License (MIT)\n\nCopyright (c) 2013-2015 Felix Gnass\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/davej/instant.git"
  },
  "scripts": {
    "prepublish": "browserify client/index.js -o client/bundle.js",
    "test": "mocha --require should"
  },
  "version": "3.0.0"
}
