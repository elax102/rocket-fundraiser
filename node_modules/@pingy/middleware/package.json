{
  "_args": [
    [
      {
        "raw": "@pingy/middleware@^3.1.3",
        "scope": "@pingy",
        "escapedName": "@pingy%2fmiddleware",
        "name": "@pingy/middleware",
        "rawSpec": "^3.1.3",
        "spec": ">=3.1.3 <4.0.0",
        "type": "range"
      },
      "/home/alex/Documents/Learning/rocket/node_modules/@pingy/cli"
    ]
  ],
  "_from": "@pingy/middleware@>=3.1.3 <4.0.0",
  "_id": "@pingy/middleware@3.1.3",
  "_inCache": true,
  "_location": "/@pingy/middleware",
  "_nodeVersion": "7.5.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/middleware-3.1.3.tgz_1494326763084_0.48432518844492733"
  },
  "_npmUser": {
    "name": "davej",
    "email": "dave@davejeffery.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@pingy/middleware@^3.1.3",
    "scope": "@pingy",
    "escapedName": "@pingy%2fmiddleware",
    "name": "@pingy/middleware",
    "rawSpec": "^3.1.3",
    "spec": ">=3.1.3 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@pingy/cli"
  ],
  "_resolved": "https://registry.npmjs.org/@pingy/middleware/-/middleware-3.1.3.tgz",
  "_shasum": "224332a4f12047b5edec6c2349148f7af46efd5e",
  "_shrinkwrap": null,
  "_spec": "@pingy/middleware@^3.1.3",
  "_where": "/home/alex/Documents/Learning/rocket/node_modules/@pingy/cli",
  "author": {
    "name": "Dave Jeffery",
    "email": "dave@davejeffery.com"
  },
  "bugs": {
    "url": "https://github.com/davej/piggy-in-the-middle/issues"
  },
  "dependencies": {
    "@pingy/compile": "^6.1.3",
    "chokidar": "^1.6.0",
    "csserror": "^2.0.2",
    "jserror": "^1.0.0",
    "mime": "^1.3.4",
    "when": "^3.7.3"
  },
  "description": "Express/Connect middleware for transpiling to html/css/js on-the-fly",
  "devDependencies": {
    "@pingy/instant": "^3.0.0",
    "coffee-script": "^1.10.0",
    "connect": "^3.4.0",
    "express": "^4.13.3",
    "instant": "^1.10.1",
    "jade": "^1.11.0",
    "magicpen-media": "^1.5.1",
    "messy": "^6.10.0",
    "mocha": "^2.5.3",
    "node-sass": "^3.13.1",
    "serve-static": "^1.11.1",
    "sinon": "^1.17.4",
    "stylus": "^0.54.5",
    "unexpected": "^10.13.3",
    "unexpected-express": "^8.2.0",
    "unexpected-messy": "^6.1.1",
    "unexpected-sinon": "^10.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "224332a4f12047b5edec6c2349148f7af46efd5e",
    "tarball": "https://registry.npmjs.org/@pingy/middleware/-/middleware-3.1.3.tgz"
  },
  "engineStrict": true,
  "engines": {
    "node": ">=6"
  },
  "homepage": "https://github.com/davej/piggy-in-the-middle",
  "license": "MIT",
  "main": "lib/middleware.js",
  "maintainers": [
    {
      "name": "davej",
      "email": "dave@davejeffery.com"
    }
  ],
  "name": "@pingy/middleware",
  "optionalDependencies": {},
  "readme": "Piggy In The Middle\n===================\n\n[![npm version](https://badge.fury.io/js/piggy-in-the-middle.svg)](https://badge.fury.io/js/piggy-in-the-middle)\n[![Build Status](https://travis-ci.org/davej/piggy-in-the-middle.svg?branch=master)](https://travis-ci.org/davej/piggy-in-the-middle)\n\nExpress/Connect middleware for transpiling to html/css/js on-the-fly. Also gives you sourcemaps, caching for unchanged files and integrates well with live reload tools like browser-sync and live-reload.\n\nCurrently supports: `LiveScript`, `babel`, `coco`, `coffee-script`, `dogescript`, `less`, `marked`, `myth`, `jade`, `node-sass`, `stylus`, `swig`.\n\nIt works a bit like this:\n  1. A request comes in for `app.js`\n  2. `app.js` can not be found (`404`)\n  3. PITM will look for files that compile to `app.js`\n  4. It finds `app.coffee`\n  5. `app.coffee` is compiled on-the-fly\n  6. The compiled output is served to the browser as `app.js`\n\nSubsequent requests will not force a recompile file because PITM will cache the output. PITM is smart and will watch the source file(s) for changes, if you change a source file then it will do a recompile on next request.\n\n\nTry it out\n----------  \nThe easiest way to try this out is to `clone` the repo, `cd` into it and do:\n\n```sh\nnpm install\nnpm run example\n```\n\nThis will start a basic demo site using PITM.\n\n\nUse as middleware\n-----------------\nHere's a really simple example:\n\n```javascript\nvar connect = require('connect');\nvar serveStatic = require('serve-static');\nvar pitm = require('piggy-in-the-middle');\n\nvar app = connect();\n\napp.use(serveStatic('/path/to/your/site'));\napp.use(pitm('/path/to/your/site'));\n\napp.listen(3000);\n```\n\nOnce initialized PITM will also emit 'fileChanged' events whenever a watched file\nis changed, this is useful for doing live reloading of the browser.\nFor example, to integrate PITM with [browser-sync](http://www.browsersync.io/)\nyou can do something like this:\n\n```javascript\nvar pitm = require('piggy-in-the-middle');\nvar browserSync = require('browser-sync').create();\n\nvar piggy = pitm('/path/to/your/site');\npiggy.events.on('fileChanged', browserSync.reload);\n```\n\nCustom Path To `node_modules`\n-----------------------------\n\n```js\nglobal.babyTolkCompilerModulePath = '/some/folder/node_modules';\npitm('/path/to/your/site');\n```\n\nBy default PITM will look for compatible modules in the `node_modules` dir inside of `/path/to/your/site`.\nYou can set `global.babyTolkCompilerModulePath` to look for compatible node modules in a different dir, like in the example above: `/some/other/dir/node_modules`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/davej/piggy-in-the-middle.git"
  },
  "scripts": {
    "example": "node examples/basic-connect-server.js",
    "test": "mocha"
  },
  "version": "3.1.3"
}
