{
  "_args": [
    [
      {
        "raw": "@pingy/scaffold@^5.2.0",
        "scope": "@pingy",
        "escapedName": "@pingy%2fscaffold",
        "name": "@pingy/scaffold",
        "rawSpec": "^5.2.0",
        "spec": ">=5.2.0 <6.0.0",
        "type": "range"
      },
      "/home/alex/Documents/Learning/rocket/node_modules/@pingy/cli"
    ]
  ],
  "_from": "@pingy/scaffold@>=5.2.0 <6.0.0",
  "_id": "@pingy/scaffold@5.2.0",
  "_inCache": true,
  "_location": "/@pingy/scaffold",
  "_nodeVersion": "7.5.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/scaffold-5.2.0.tgz_1494162651079_0.9053669048007578"
  },
  "_npmUser": {
    "name": "davej",
    "email": "dave@davejeffery.com"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@pingy/scaffold@^5.2.0",
    "scope": "@pingy",
    "escapedName": "@pingy%2fscaffold",
    "name": "@pingy/scaffold",
    "rawSpec": "^5.2.0",
    "spec": ">=5.2.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@pingy/cli"
  ],
  "_resolved": "https://registry.npmjs.org/@pingy/scaffold/-/scaffold-5.2.0.tgz",
  "_shasum": "3bce7f1c0a222f4df00b647d43ee577aebc255ed",
  "_shrinkwrap": null,
  "_spec": "@pingy/scaffold@^5.2.0",
  "_where": "/home/alex/Documents/Learning/rocket/node_modules/@pingy/cli",
  "author": {
    "name": "Dave Jeffery",
    "email": "dave@davejeffery.com"
  },
  "bugs": {
    "url": "https://github.com/davej/barnyard/issues"
  },
  "dependencies": {
    "babel-polyfill": "^6.16.0",
    "checkdir": "^1.1.0",
    "deep-extend": "^0.4.1",
    "detab": "^1.0.2",
    "markup-js": "^1.5.21",
    "mkdirp": "^0.5.1",
    "mz": "^2.6.0",
    "normalize.css": "^5.0.0",
    "thenify": "^3.2.1"
  },
  "description": "Bootstrap/Scaffold a project for use with Piggy in the Middle and Baconize",
  "devDependencies": {
    "coveralls": "^2.11.12",
    "istanbul": "^0.4.4",
    "mocha": "^2.5.3",
    "mocha-lcov-reporter": "^1.0.0",
    "rimraf": "^2.5.4",
    "unexpected": "^10.15.0"
  },
  "directories": {},
  "dist": {
    "shasum": "3bce7f1c0a222f4df00b647d43ee577aebc255ed",
    "tarball": "https://registry.npmjs.org/@pingy/scaffold/-/scaffold-5.2.0.tgz"
  },
  "engineStrict": true,
  "engines": {
    "node": ">=6"
  },
  "homepage": "https://github.com/davej/barnyard#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "davej",
      "email": "dave@davejeffery.com"
    }
  ],
  "name": "@pingy/scaffold",
  "optionalDependencies": {},
  "readme": "Scaffold\n========\n\n[![npm version](https://badge.fury.io/js/barnyard.svg)](https://badge.fury.io/js/barnyard)\n[![Build Status](https://travis-ci.org/davej/barnyard.svg?branch=master)](https://travis-ci.org/davej/barnyard)\n[![Coverage Status](https://img.shields.io/coveralls/davej/barnyard.svg)](https://coveralls.io/r/davej/barnyard?branch=master)\n\nScaffold a project for use with [Piggy in the Middle](https://github.com/davej/piggy-in-the-middle) and [Baconize](https://github.com/davej/baconize).\n\n\nGetting Started\n---------------\n\nTo install:\n```sh\nnpm install @pingy/scaffold\n```\n\nTo scaffold out a project using `html`, `scss`, `babel`, you could do:\n\n```javascript\nvar scaffold = require('@pingy/scaffold');\n\nvar scaffoldDir = '/path/to/dir';\nvar options = {\n  styles: { type: 'scss' },\n  scripts: { type: 'babel' },\n  whitespaceFormatting: 2,\n  babelPolyfill: true,\n  normalizeCss: true,\n};\n\nscaffold(scaffoldDir, options).then([successFn],[errorFn]);\n// [successFn] will be passed an array of the files that were created during the scaffold\n```\n\nThis will scaffold a project that has the following directory structure:\n\n```\n/path/to/dir\n├─┬ scripts\n│ ├── main.babel.js\n│ └── polyfill.js\n├─┬ styles\n│ ├── main.scss\n│ └── normalize.css\n└ index.html\n```\n\nAnd here is a truncated version of the html file:\n\n```html\n<!DOCTYPE html>\n  <head>\n    <!-- ... -->\n    <link rel=\"stylesheet\" href=\"styles/normalize.css\">\n    <link rel=\"stylesheet\" href=\"styles/main.css\">\n  </head>\n  <body>\n    <!-- ... -->\n    <script src=\"scripts/polyfill.js\"></script>\n    <script src=\"scripts/main.js\"></script>\n  </body>\n</html>\n```\n\n\nOptions\n-------\n\n- **html**\n\n  - **type** (String, default = 'html'): Which languages to use for html documents. Possibilities: 'html', 'jade'.\n\n  - **file** (String, default = 'index'): Filename (without extension) for main html document.\n\n- **styles**\n\n  - **type** (String, default = 'css'): Which languages to use for stylesheets. Possibilities: 'css', 'scss', 'sass', 'less', 'styl'.\n\n  - **file** (String, default = 'main'): Filename (without extension) for main style file.\n\n  - **folder** (String, default = 'styles'): folder where style files are stored.\n\n- **scripts**\n\n  - **type** (String, default = 'js'): Which languages to use for javascript. Possibilities: 'js', 'babel', 'coffee'.\n\n  - **file** (String, default = 'main'): Filename (without extension) for main script files.\n\n  - **folder** (String, default = 'styles'): folder where script files are stored.\n\n- **babelPolyfill** (Boolean): Include and reference the [babel polyfill](https://babeljs.io/docs/usage/polyfill/).\n\n- **normalizeCss** (Boolean): Include and reference [normalize.css](https://necolas.github.io/normalize.css/).\n\n- **whitespaceFormatting** (Number/String, default = 'tabs'): Formatting for whitespace. If not specified then tabs will be used, otherwise you can pass a number (e.g. 2, 4, 8) and the corresponding number of spaces will be used\n\nHere is a full list of the defaults:\n\n```js\n{\n  html: {\n    file: 'index',\n    type: 'html', // or 'jade'\n  },\n  styles: {\n    folder: 'styles',\n    file: 'main',\n    type: 'css', // or 'scss', 'sass', 'less', 'styl'\n  },\n  scripts: {\n    folder: 'scripts',\n    file: 'main',\n    type: 'js', // or 'babel', 'coffee'\n  },\n  babelPolyfill: false,\n  normalizeCss: false,\n  whitespaceFormatting: 'tabs',\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/davej/barnyard.git"
  },
  "scripts": {
    "coverage": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage",
    "test": "mocha",
    "travis": "npm run coverage"
  },
  "version": "5.2.0"
}
